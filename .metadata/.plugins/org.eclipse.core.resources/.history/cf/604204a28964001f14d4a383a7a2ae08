package com.example.demo.Controller;

import java.awt.PageAttributes.MediaType;
import java.io.ByteArrayOutputStream;
import java.net.http.HttpHeaders;
import java.nio.file.Files;
import java.util.List;

import org.apache.tomcat.util.http.fileupload.IOUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Model.Employee;
import com.example.demo.PDFGenerator.PDFGenerator;
import com.example.demo.Service.EmployeeService;
import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.codec.Base64.OutputStream;
import com.itextpdf.text.pdf.parser.clipper.Paths;

import jakarta.servlet.http.HttpServletResponse;
import jakarta.websocket.server.PathParam;

@RestController
@RequestMapping("/Employee")
public class EmployeeController {
	
	@Autowired
	EmployeeService service;
	
	@Autowired
	PDFGenerator pdf;
	
	@PostMapping("/addEmployee")
	public ResponseEntity<String> addEmployee(@RequestBody Employee emp)
	{
		return service.addEmployee(emp);
	}
	
	@DeleteMapping("/deleteEmployee")
	public  ResponseEntity<String> deleteEmployee(@RequestBody Employee emp)
	{
		return service.deleteEmployee(emp);
		
	}

	@GetMapping("/fetchAllEmployee")
	public ResponseEntity<List<Employee>> fetchAllEmployee()
	{
		return service.fetchAllEmployee();
		
	}
	
	@PostMapping("/getEmployeeByName")
	public ResponseEntity<Employee> getEmployeeByNameRequestParam(@RequestParam String Empname)
	{
		return service.getEmployeeByName(Empname);
	}
	
	@PostMapping("/getEmployeeByName/{Empname}")
	public ResponseEntity<Employee> getEmployeeByNamePathParam(@PathVariable String Empname)
	{
		return service.getEmployeeByName(Empname);
	}
	
	@GetMapping("/generatePDF")
	public ResponseEntity<byte[]>  generatePDF(HttpServletResponse httpServletResponse)
	{
		
		 ByteArrayOutputStream pdfStream = pdf.generatePDF();
		 HttpHeaders headers = new HttpHeaders();
	        headers.setContentType(MediaType.APPLICATION_PDF);
	        headers.set(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=query_results.pdf");
	        headers.setContentLength(pdfStream.size());
	        return new ResponseEntity<>(pdfStream.toByteArray(), headers, HttpStatus.OK);
	}
	

	
	
}
